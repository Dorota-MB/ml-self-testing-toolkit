[
  {
    "ruleId": 1,
    "description": "If the transfer amount type is other than USD, send a mock error callback",
    "conditions": {
      "all": [
        {
          "fact": "path",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        },
        {
          "fact": "body",
          "operator": "notEqual",
          "value": "USD",
          "path": "amount.currency"
        }
      ]
    },
    "event": {
      "type": "MOCK_ERROR_CALLBACK",
      "params": {
        "headers": {
          "Content-Type": "{$request.headers['content-type']}"
        },
        "body": {
          "errorInformation": {
            "errorCode": "4103",
            "errorDescription": "Payer does not have an account which supports the requested currency."
          }
        }
      }
    }
  },
  {
    "ruleId": 2,
    "description": "If the party lookup received for other than 000111, send error callback that the party is not found",
    "conditions": {
      "all": [
        {
          "fact": "path",
          "operator": "notEqual",
          "value": "/parties/MSISDN/000111"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "type": "MOCK_ERROR_CALLBACK",
      "params": {
        "headers": {
          "Content-Type": "{$request.headers['content-type']}"
        },
        "body": {
          "errorInformation": {
            "errorCode": "3204",
            "errorDescription": "Party with the provided identifier, identifier type, and optional sub id or type was not found."
          }
        }
      }
    }
  },
  {
    "ruleId": 3,
    "description": "If the transfer request is received with the amount 100, send mock error callback",
    "conditions": {
      "all": [
        {
          "fact": "path",
          "operator": "equal",
          "value": "/quotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        },
        {
          "fact": "body",
          "operator": "equal",
          "value": "99",
          "path": "amount.amount"
        }
      ]
    },
    "event": {
      "type": "MOCK_ERROR_CALLBACK",
      "params": {}
    }
  }
]